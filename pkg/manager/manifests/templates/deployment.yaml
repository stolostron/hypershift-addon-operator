kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .AddonName }}
  namespace: {{ .AddonInstallNamespace }}
  labels:
    app: {{ .AddonName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .AddonName }}
  template:
    metadata:
      labels:
        app: {{ .AddonName }}
    spec:
      serviceAccountName: {{ .AgentServiceAccountName }}
      securityContext:
        runAsNonRoot: true
      containers:
{{- if ne .disableMetrics "true" }}
      - name: kube-rbac-proxy
        image: {{ .KubeRbacProxyImage }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        args:
        - --upstream=http://127.0.0.1:8383/
        - --logtostderr=true
        - --v=6
        - --secure-listen-address=:8443
        - "--tls-cert-file=/var/run/metrics-cert/tls.crt"
        - "--tls-private-key-file=/var/run/metrics-cert/tls.key"
        - "--tls-min-version=VersionTLS13"
        ports:
        - name: https
          protocol: TCP
          containerPort: 8443
        volumeMounts:
        - mountPath: "/var/run/metrics-cert"
          name: metrics-cert
          readOnly: true
{{- end }}
      - name: {{ .AddonName }}
        image: {{ .Image }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        args:
          - "./hypershift-addon"
          - "agent"
          - "--hub-kubeconfig=/var/run/hub/kubeconfig"
          - "--cluster-name={{ .ClusterName }}"
          - "--addon-namespace={{ .AddonInstallNamespace }}"
          - "--with-image-override={{ .HyeprshiftImageOverride }}"
          - "--hypershfit-operator-image={{ .HypershiftOperatorImage }}"
          - "--multicluster-pull-secret={{ .MulticlusterEnginePullSecret }}"
          - --metrics-bind-address=0.0.0.0:8383
        env:
{{- if .hcMaxNumber }}
        - name: HC_MAX_NUMBER
          value: "{{ .hcMaxNumber }}"
{{- end }}
{{- if .hcThresholdNumber }}
        - name: HC_THRESHOLD_NUMBER
          value: "{{ .hcThresholdNumber }}"
{{- end }}
{{- if eq .enableRHOBSMonitoring "true" }}
        - name: RHOBS_MONITORING
          value: "{{ .enableRHOBSMonitoring }}"
{{- end }}
{{- if ne .disableMetrics "true" }}
        ports:
        - name: metrics
          protocol: TCP
          containerPort: 8383
{{- end }}
        volumeMounts:
          - name: hub-config
            mountPath: /var/run/hub
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 2
          periodSeconds: 10
      volumes:
        - name: hub-config
          secret:
            secretName: {{ .KubeConfigSecret }}
{{- if ne .disableMetrics "true" }}
        - name: metrics-cert
          secret:
            secretName: {{ .AddonName }}-metrics
{{- end }}
{{- if .MulticlusterEnginePullSecret }}
      imagePullSecrets:
      - name: "{{ .MulticlusterEnginePullSecret }}"
{{- end }}
{{- if .NodeSelector }}
      nodeSelector:
      {{- range $key, $value := .NodeSelector }}
        "{{ $key }}": "{{ $value }}"
      {{- end }}
{{- end }}
{{- if .Tolerations }}
      tolerations:
      {{- range $toleration := .Tolerations }}
      - key: "{{ $toleration.Key }}"
        value: "{{ $toleration.Value }}"
        effect: "{{ $toleration.Effect }}"
        operator: "{{ $toleration.Operator }}"
        {{- if $toleration.TolerationSeconds }}
        tolerationSeconds: {{ $toleration.TolerationSeconds }}
        {{- end }}
      {{- end }}
{{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false