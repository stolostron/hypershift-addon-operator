kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .AddonName }}
  namespace: {{ .AddonInstallNamespace }}
  labels:
    app: {{ .AddonName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .AddonName }}
  template:
    metadata:
      labels:
        app: {{ .AddonName }}
    spec:
      serviceAccountName: {{ .AgentServiceAccountName }}
      volumes:
      - name: hub-config
        secret:
          secretName: {{ .KubeConfigSecret }}
      securityContext:
        runAsNonRoot: true
      containers:
      - name: {{ .AddonName }}
        image: {{ .Image }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
        args:
          - "./hypershift-addon"
          - "agent"
          - "--hub-kubeconfig=/var/run/hub/kubeconfig"
          - "--cluster-name={{ .ClusterName }}"
          - "--addon-namespace={{ .AddonInstallNamespace }}"
          - "--with-image-override={{ .HyeprshiftImageOverride }}"
          - "--hypershfit-operator-image={{ .HypershiftOperatorImage }}"
          - "--multicluster-pull-secret={{ .MulticlusterEnginePullSecret }}"
        env:
{{- if .hcMaxNumber }}
        - name: HC_MAX_NUMBER
          value: "{{ .hcMaxNumber }}"
{{- end }}
{{- if .hcThresholdNumber }}
        - name: HC_THRESHOLD_NUMBER
          value: "{{ .hcThresholdNumber }}"
{{- end }}
{{- if .enableRHOBSMonitoring }}
        - name: ENABLE_RHOBS_MONITORING
          value: "{{ .enableRHOBSMonitoring }}"
{{- end }}
        volumeMounts:
          - name: hub-config
            mountPath: /var/run/hub
      {{- if .MulticlusterEnginePullSecret }}
      imagePullSecrets:
      - name: "{{ .MulticlusterEnginePullSecret }}"
      {{- end }}
      {{- if .NodeSelector }}
      nodeSelector:
      {{- range $key, $value := .NodeSelector }}
        "{{ $key }}": "{{ $value }}"
      {{- end }}
      {{- end }}
      {{- if .Tolerations }}
      tolerations:
      {{- range $toleration := .Tolerations }}
      - key: "{{ $toleration.Key }}"
        value: "{{ $toleration.Value }}"
        effect: "{{ $toleration.Effect }}"
        operator: "{{ $toleration.Operator }}"
        {{- if $toleration.TolerationSeconds }}
        tolerationSeconds: {{ $toleration.TolerationSeconds }}
        {{- end }}
      {{- end }}
      {{- end }}